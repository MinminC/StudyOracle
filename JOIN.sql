---------------------- JOIN 종합 실습문제 ----------------------
--1. 직급이 대리이면서 ASIA 지역에 근무하는 직원들의
--사번, 사원명, 직급명, 부서명, 근무지역명, 급여를 조회하시오
--JOB       JOB_CODE
--EMPLOYEE JOB_CODE, DEPT_CODE
--DEPARTMENT         DEPT_ID,   LOCAATION_ID
--LOCATION                      LOCAL_CODE

--SELECT COUNT(*) FROM EMPLOYEE LEFT JOIN JOB USING(JOB_CODE) LEFT JOIN DEPARTMENT ON(DEPT_CODE=DEPT_ID) LEFT JOIN LOCATION ON(LOCATION_ID=LOCAL_CODE) WHERE JOB_NAME='대리' AND LOCAL_NAME LIKE 'ASIA_';
--ANSI
SELECT EMP_ID AS 사번, EMP_NAME AS 사원명, JOB_NAME AS 직급명
    , DEPT_TITLE AS 부서명, LOCAL_NAME AS 근무지역명, SALARY AS 급여
FROM EMPLOYEE 
LEFT JOIN JOB USING(JOB_CODE)
LEFT JOIN DEPARTMENT ON(DEPT_CODE=DEPT_ID)
LEFT JOIN LOCATION ON(LOCATION_ID=LOCAL_CODE)
WHERE JOB_NAME='대리' AND LOCAL_NAME LIKE 'ASIA_';
--ORACLE
SELECT EMP_ID AS 사번, EMP_NAME AS 사원명, JOB_NAME AS 직급명
    , DEPT_TITLE AS 부서명, LOCAL_NAME AS 근무지역명, SALARY AS 급여
FROM EMPLOYEE E, JOB J, DEPARTMENT D, LOCATION L
WHERE E.JOB_CODE=J.JOB_CODE(+)
    AND E.DEPT_CODE=D.DEPT_ID(+)
    AND D.LOCATION_ID=L.LOCAL_CODE(+)
    AND JOB_NAME='대리' AND LOCAL_NAME LIKE 'ASIA_';

--2. 70년대생이면서 여자이고, 성이 전씨인 직원들의
--사원명, 주민번호, 부서명, 직급명을 조회하시오

--SELECT COUNT(*) FROM EMPLOYEE WHERE SUBSTR(EMP_NO,1,1)=7 AND SUBSTR(EMP_NO,8,1)=2 AND EMP_NAME LIKE '전%';
--ANSI
SELECT EMP_NAME AS 사원명, EMP_NO AS 주민번호
    , DEPT_TITLE AS 부서명, JOB_NAME AS 직급명
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON(DEPT_CODE=DEPT_ID)
LEFT JOIN JOB USING(JOB_CODE)
WHERE SUBSTR(EMP_NO,1,1)=7 
    AND SUBSTR(EMP_NO,8,1)=2 
    AND EMP_NAME LIKE '전%';
--ORACLE
SELECT EMP_NAME AS 사원명, EMP_NO AS 주민번호
    , DEPT_TITLE AS 부서명, JOB_NAME AS 직급명
FROM EMPLOYEE E, DEPARTMENT D, JOB J
WHERE E.DEPT_CODE=D.DEPT_ID(+)
    AND E.JOB_CODE=J.JOB_CODE(+)
    AND SUBSTR(EMP_NO,1,1)=7 
    AND SUBSTR(EMP_NO,8,1)=2 
    AND EMP_NAME LIKE '전%';

--3. 이름에 '형'자가 들어있는 직원들의 
--사번, 사원명, 직급명을 조회하시오

--SELECT COUNT(*) FROM EMPLOYEE WHERE EMP_NAME LIKE '%형%';
--ANSI
SELECT EMP_ID AS 사번, EMP_NAME AS 사원명, JOB_NAME AS 직급명
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON(DEPT_CODE=DEPT_ID)
LEFT JOIN JOB USING(JOB_CODE)
WHERE EMP_NAME LIKE '%형%';
--ORACLE
SELECT EMP_ID AS 사번, EMP_NAME AS 사원명, JOB_NAME AS 직급명
FROM EMPLOYEE E, DEPARTMENT D, JOB J
WHERE E.DEPT_CODE=D.DEPT_ID(+)
    AND E.JOB_CODE=J.JOB_CODE(+)
    AND EMP_NAME LIKE '%형%';
    
--4. 해외영업팀에 근무하는 직원들의
--사원명, 직급명, 부서코드, 부서명을 조회하시오

--SELECT COUNT(*) FROM EMPLOYEE LEFT JOIN DEPARTMENT ON(DEPT_CODE=DEPT_ID) WHERE DEPT_TITLE LIKE '해외영업%';
--ANSI
SELECT EMP_NAME AS 사원명, JOB_NAME AS 직급명
    , DEPT_CODE AS 부서코드, DEPT_TITLE AS 부서명
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON(DEPT_CODE=DEPT_ID)
LEFT JOIN JOB USING(JOB_CODE)
WHERE DEPT_TITLE LIKE '해외영업__';
--ORACLE
SELECT EMP_NAME AS 사원명, JOB_NAME AS 직급명, DEPT_CODE AS 부서코드, DEPT_TITLE AS 부서명
FROM EMPLOYEE E, DEPARTMENT D, JOB J
WHERE E.JOB_CODE=J.JOB_CODE(+)
    AND E.DEPT_CODE=D.DEPT_ID(+)
    AND DEPT_TITLE LIKE '해외영업__';

--5. 보너스를 받는 직원들의
--사원명, 보너스, 연봉, 부서명, 근무지역명을 조회하시오

--SELECT COUNT(*) FROM EMPLOYEE WHERE BONUS IS NOT NULL;
--ANSI
SELECT EMP_NAME AS 사원명, BONUS AS 보너스, SALARY*12 AS 연봉
    , JOB_NAME AS 부서명, LOCAL_NAME AS 근무지역명
FROM DEPARTMENT --연결고리 만들어주기?
FULL OUTER JOIN LOCATION ON(LOCATION_ID=LOCAL_CODE)--LEFT JOIN이랑 다른건 없..나?그런것같은뎅
RIGHT JOIN EMPLOYEE ON(DEPT_CODE=DEPT_ID)
LEFT JOIN JOB USING(JOB_CODE)
WHERE BONUS IS NOT NULL;
--ORACLE
SELECT EMP_NAME AS 사원명, BONUS AS 보너스, SALARY*12 AS 연봉
    , JOB_NAME AS 부서명, LOCAL_NAME AS 근무지역명
FROM EMPLOYEE E, DEPARTMENT D, LOCATION L, JOB J
WHERE E.DEPT_CODE=D.DEPT_ID(+)
    AND D.LOCATION_ID=L.LOCAL_CODE(+)
    AND E.JOB_CODE=J.JOB_CODE(+)
    AND BONUS IS NOT NULL;


--6. 부서가 있는 직원들의
--사원명, 직급명, 부서명, 근무지역명을 조회하시오

--SELECT COUNT(*) FROM EMPLOYEE WHERE DEPT_CODE IS NOT NULL;
--ANSI
SELECT EMP_NAME AS 사원명, JOB_NAME AS 직급명
    , DEPT_TITLE AS 부서명, LOCAL_NAME AS 근무지역명
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON (DEPT_CODE=DEPT_ID)
LEFT JOIN JOB USING(JOB_CODE)
LEFT JOIN LOCATION ON(LOCATION_ID=LOCAL_CODE)
WHERE DEPT_CODE IS NOT NULL;
--ORACLE
SELECT EMP_NAME AS 사원명, JOB_NAME AS 직급명
    , DEPT_TITLE AS 부서명, LOCAL_NAME AS 근무지역명
FROM EMPLOYEE E, DEPARTMENT D, JOB J, LOCATION L
WHERE E.DEPT_CODE=D.DEPT_ID(+)
    AND E.JOB_CODE=J.JOB_CODE(+)
    AND D.LOCATION_ID=L.LOCAL_CODE(+)
    AND DEPT_CODE IS NOT NULL;

--7. '한국' 과 '일본' 에 근무하는 직원들의
--사원명, 부서명, 근무지역명, 근무국가명을 조회하시오

--SELECT COUNT(*) FROM EMPLOYEE LEFT JOIN DEPARTMENT ON (DEPT_CODE=DEPT_ID) LEFT JOIN LOCATION ON(LOCATION_ID=LOCAL_CODE) LEFT JOIN NATIONAL USING(NATIONAL_CODE) WHERE NATIONAL_NAME IN ('한국','일본');
--ANSI
SELECT EMP_NAME AS 사원명, JOB_NAME AS 부서명
    , LOCAL_NAME AS 근무지역명, NATIONAL_NAME AS 근무국가명
FROM EMPLOYEE 
LEFT JOIN DEPARTMENT ON(DEPT_CODE=DEPT_ID)
LEFT JOIN LOCATION ON (LOCATION_ID=LOCAL_CODE)
LEFT JOIN NATIONAL USING(NATIONAL_CODE)
LEFT JOIN JOB USING(JOB_CODE)
WHERE NATIONAL_NAME IN ('한국', '일본');
--ORACLE
SELECT EMP_NAME AS 사원명, JOB_NAME AS 부서명
    , LOCAL_NAME AS 근무지역명, NATIONAL_NAME AS 근무국가명
FROM EMPLOYEE E, DEPARTMENT D, LOCATION L, NATIONAL N, JOB J
WHERE E.DEPT_CODE=D.DEPT_ID(+)
    AND D.LOCATION_ID=L.LOCAL_CODE(+)
    AND L.NATIONAL_CODE=N.NATIONAL_CODE(+)
    AND E.JOB_CODE=J.JOB_CODE(+)
    AND NATIONAL_NAME IN ('한국', '일본');


--8. 보너스를 받지 않는 직원들 중 직급코드가 J4 또는 J7 인 직원들의
--사원명, 직급명, 급여를 조회하시오

--SELECT COUNT(*) FROM EMPLOYEE WHERE BONUS IS NULL AND JOB_CODE IN('J4','J7');
--ANSI
SELECT EMP_NAME AS 사원명, JOB_NAME AS 직급명, SALARY AS 급여
FROM EMPLOYEE
LEFT JOIN JOB USING(JOB_CODE)
WHERE BONUS IS NULL AND JOB_CODE IN ('J4','J7');
--ORACLE
SELECT EMP_NAME AS 사원명, JOB_NAME AS 직급명, SALARY AS 급여
FROM EMPLOYEE E, JOB J
WHERE E.JOB_CODE=J.JOB_CODE(+)
    AND BONUS IS NULL AND E.JOB_CODE IN ('J4','J7');


--9. 사번, 사원명, 직급명, 급여등급, 구분을 조회하는데
--이 때, 구분에 해당하는 값은 
--급여등급이 S1, S2 인 경우 '고급'
--급여등급이 S3, S4 인 경우 '중급'
--급여등급이 S5, S6 인 경우 '초급' 으로 조회되게 하시오

--SELECT COUNT(*) FROM EMPLOYEE;
--ANSI
SELECT * FROM SAL_GRADE;
SELECT EMP_ID AS 사번, EMP_NAME AS 사원명, DEPT_CODE AS 직급명, E.SAL_LEVEL AS 급여등급
    , CASE WHEN E.SAL_LEVEL='S1' OR E.SAL_LEVEL='S2' THEN '고급'
           WHEN E.SAL_LEVEL='S3' OR E.SAL_LEVEL='S4' THEN '중급' 
           ELSE '초급'
    END AS 구분
FROM EMPLOYEE E
JOIN SAL_GRADE ON(SALARY BETWEEN MIN_SAL AND MAX_SAL);
--ORACLE
SELECT * FROM SAL_GRADE;
SELECT EMP_ID AS 사번, EMP_NAME AS 사원명, DEPT_CODE AS 직급명, E.SAL_LEVEL AS 급여등급
    , CASE WHEN E.SAL_LEVEL='S1' OR E.SAL_LEVEL='S2' THEN '고급'
           WHEN E.SAL_LEVEL='S3' OR E.SAL_LEVEL='S4' THEN '중급' 
           ELSE '초급'
    END AS 구분
FROM EMPLOYEE E, SAL_GRADE S
WHERE SALARY BETWEEN MIN_SAL AND MAX_SAL;